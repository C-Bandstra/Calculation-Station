{"version":3,"sources":["Components/Keyboard/Keyboard.js","Components/ResultScreen/ResultScreen.js","Components/Calculator/Calculator.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["Keyboard","clearResult","updateShadow","currentSequence","storeResult","calculate","allClear","storeKey","grabKey","e","preventDefault","target","innerText","handleNumber","a","key","shadowTest","handleSymbol","regex","includes","test","result","className","onClick","event","evaluate","ResultScreen","shadowResult","Parser","require","Calculator","setState","beautifyResult","toFixed","Math","trunc","sequence","state","replaceChar","oldChar","newChar","indexOf","index","input","split","join","clickedKey","currentState","updatedState","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c05b160.chunk.js","sourcesContent":["import React from 'react';\nimport './Keyboard.css';\n\nconst Keyboard = ({ \n  clearResult,\n  updateShadow,\n  currentSequence,\n  storeResult,\n  calculate,\n  allClear,\n  storeKey }) => {\n\n  const evaluate = () => {\n    let result = calculate()\n    storeResult(result)\n  }\n\n  const grabKey = (e) => {\n    e.preventDefault();\n    return e.target.innerText;\n  }\n\n  const handleNumber = async (e) => {\n    let key = grabKey(e)\n    await storeKey(key);\n    var regex = /\\d/g;\n    shadowTest(regex)\n  }\n\n  const handleSymbol = (e) => {\n    let key = grabKey(e)\n    storeKey(key);\n    clearResult()\n  }\n\n  const shadowTest = (regex) => {\n    if(currentSequence.includes('(') && !currentSequence.includes(')')) {\n      return currentSequence\n    }\n\n    if(regex.test(currentSequence)) {\n      let result = calculate();\n      updateShadow(result)\n    }\n  }\n\n  return(\n    <div className=\"keyboard\">\n      <section className=\"key-row row-1\">\n        <button onClick={() => allClear()} className=\"key\"> AC </button>\n        <button onClick={(event) => handleSymbol(event)} className=\"key\"> ( </button>\n        <button onClick={(event) => handleSymbol(event)} className=\"key\"> ) </button>\n        <button onClick={(event) => handleSymbol(event)} className=\"key\"> รท </button>\n      </section>\n\n      <section className=\"key-row row-2\">\n        <button onClick={(event) => handleNumber(event)} className=\"key\"> 7 </button>\n        <button onClick={(event) => handleNumber(event)} className=\"key\"> 8 </button>\n        <button onClick={(event) => handleNumber(event)} className=\"key\"> 9 </button>\n        <button onClick={(event) => handleSymbol(event)} className=\"key\"> x </button>\n      </section>\n\n      <section className=\"key-row row-3\">\n        <button onClick={(event) => handleNumber(event)} className=\"key \"> 4 </button>\n        <button onClick={(event) => handleNumber(event)} className=\"key\"> 5 </button>\n        <button onClick={(event) => handleNumber(event)} className=\"key\"> 6 </button>\n        <button onClick={(event) => handleSymbol(event)} className=\"key\"> - </button>\n      </section>\n\n      <section className=\"key-row row-4\">\n        <button onClick={(event) => handleNumber(event)} className=\"key \"> 1 </button>\n        <button onClick={(event) => handleNumber(event)} className=\"key\"> 2 </button>\n        <button onClick={(event) => handleNumber(event)} className=\"key\"> 3 </button>\n        <button onClick={(event) => handleSymbol(event)} className=\"key\"> + </button>\n      </section>\n\n      <section className=\"key-row row-5\">\n        <button onClick={(event) => handleNumber(event)} className=\"key zero-key\"> 0 </button>\n        <button onClick={(event) => handleSymbol(event)} className=\"key\"> . </button>\n        <button onClick={() => {evaluate()}} className=\"key\"> = </button>\n      </section>\n    </div>\n  )\n}\n\nexport default Keyboard","import React from 'react';\nimport './ResultScreen.css';\n\nconst ResultScreen = ({ shadowResult, result, currentSequence }) => {\n\n  return (\n    <div className=\"result-screen\">\n      <p  className={`input-display ${result ? \"hidden\" : \"\"}`}>{currentSequence}</p>\n      <p  className={`shadow-result ${result ? \"hidden\" : \"\"}`}>{shadowResult}</p>\n      <p  className={`result ${result ? \"\" : \"hidden\"}`}>{result}</p>\n    </div>\n  )\n}\n\nexport default ResultScreen","//CALCULATION ERROR OCCURS WHEN INPUTING MULTIPLE OPERATORS IN ONE SEQUENCE,\n//THIS IS BECAUSE THE INDEXOF() IS FINDING THE FIRST CHARACTER MATCHING INSTEAD OF BOTH\n\n\n\nimport React, { Component } from 'react';\nimport './Calculator.css';\nimport Keyboard from \"../Keyboard/Keyboard\"\nimport ResultScreen from \"../ResultScreen/ResultScreen\"\n\nconst Parser = require('expr-eval').Parser;\n\nclass Calculator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentSequence: '',\n      result: '',\n      shadowResult: '',\n    }\n  }\n\n  allClear = () => {\n    this.setState({\n      currentSequence: '',\n      result: '',\n      shadowResult: '',\n    })\n  }\n\n  beautifyResult = (result) => {\n    result = result.toFixed(3)\n    result = result % 1 === 0 ? Math.trunc(result) : result\n    return result\n  }\n\n  calculate = () => {\n    let sequence = this.state.currentSequence\n    sequence = this.replaceChar(sequence, 'x', '*')\n    sequence = this.replaceChar(sequence, 'รท', '/')\n    let result = Parser.evaluate(sequence)\n    result = this.beautifyResult(result)\n    return result\n  }\n\n  clearResult = () => {\n    this.setState({\n      result: '',\n    })\n  }\n\n  replaceChar = (sequence, oldChar, newChar) => {\n    if(sequence.indexOf(oldChar)) {\n      let index = sequence.indexOf(oldChar);\n      let input = sequence.split('');\n      input[index] = newChar;\n      return input.join(\"\")\n    }\n  }\n\n  storeKey = (clickedKey) => {\n    let currentState = this.state.currentSequence\n    let updatedState = currentState += clickedKey\n    this.setState({\n      currentSequence: updatedState\n    })\n  }\n\n  storeResult = (result) => {\n    this.setState({\n      currentSequence: result,\n      result: result\n    })\n  }\n\n  updateShadow = (shadowResult) => {\n    this.setState({\n      shadowResult: shadowResult\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"calculator\">\n        <ResultScreen shadowResult={this.state.shadowResult} result={this.state.result} currentSequence={this.state.currentSequence} />\n        <Keyboard clearResult={this.clearResult} updateShadow={this.updateShadow} currentSequence={this.state.currentSequence} storeResult={this.storeResult} calculate={this.calculate} allClear={this.allClear} storeKey={this.storeKey} />\n      </div>\n    )\n  }\n}\n\nexport default Calculator","import React from 'react';\nimport Calculator from \"../Calculator/Calculator\"\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>Calculation Station</h1>\n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}